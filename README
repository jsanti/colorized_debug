Colorized Debug
===============

Rails plugin to get a little debug method with colorized output in console using
ANSI escape sequences.


Installation
============

Clone from git:

git clone git@github.com:jsanti/colorized_debug.git vendor/plugins/colorized_debug

or use it has a git submodule if your app is versionned by Git too:

git submodule add git@github.com:jsanti/colorized_debug.git vendor/plugins/colorized_debug


Usage
=====

Usually you track your log files in a terminal window using something like:

cd path/to/rails/app
tail -f log/development.log

In your view, model or controller use it like:

class UsersController < ApplicationController
  def edit
    @user = User.find(params[:id])
    cdebug @user
    ...
    ...
  end
end

Then you'll see a colored output like this in your controller log with separator markers:

Processing UserController#index (for 127.0.0.1 at 2008-12-02 22:53:24) [GET]
  Session ID: 9129c43641670458eb1f77d40764f308
--------------------------------------------------------------------------------
#<User id: 1, login: "jnay", crypted_password: "covzxvzx09c8vx8v", password_salt: "covzxvzx09c8vx8v", persistence_token: nil, single_access_token: nil, perishable_token: nil, login_count: 12, account_id: 1, email: "jay@nay.com", enabled: true, firstname: "Jay", lastname: "Nay", created_at: "2008-12-03 03:58:39", updated_at: "2008-12-03 03:58:39">
--------------------------------------------------------------------------------
Completed in 12ms (View: 0, DB: 2) | 200 OK [http://localhost:3000/users]

You can pass a block too to surround the log output generated within the block with
colored markers. Useful for example to catch specific SQL calls in your logs:

@user = User.find(params[:user_id])
cdebug {
  @advert = Advert.find(params[:id], :conditions => { :user_id => @user.id }, :joins => "LEFT JOIN streets ON streets.id = adverts.street_id")
}

  User Load (0.191339)   SELECT * FROM `users` WHERE (`users`.`id` = 48) LIMIT 1
--------------------------------------------------------------------------------
  Advert Load (0.002308)   SELECT `adverts`.* FROM `adverts` LEFT JOIN streets ON streets.id = adverts.street_id
  WHERE (adverts.user_id = 48) ORDER BY adverts.id DESC LIMIT 1, 25
--------------------------------------------------------------------------------


Acknowledgement
===============

This post inspired me to make this plugin:
http://kpumuk.info/ruby-on-rails/colorizing-console-ruby-script-output


License
=======

Copyright (c) 2008 Jorge Santiago

Released under the MIT license.